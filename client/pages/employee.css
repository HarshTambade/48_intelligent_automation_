<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Employee Information Management</title>
  <link rel="stylesheet" href="../styles.css">
</head>
<body>

<input type="checkbox" id="menu-toggle">
<label for="menu-toggle" class="menu-icon">&#9776;</label>

<nav class="navbar">
  <div class="navbar-logo">
    <img src="/client/assests/logo.png" alt="HRCONNEX Logo">
  </div>
  <ul class="navbar-nav">
    <li class="nav-item">
      <a href="../index.html" class="nav-link">Home</a>
    </li>
    <li class="nav-item">
      <a href="employee.html" class="nav-link">Employees</a>
    </li>
    <li class="nav-item">
      <a href="attendance.html" class="nav-link">Attendance</a>
    </li>
    <li class="nav-item">
      <a href="leave.html" class="nav-link">Leave Management</a>
    </li>
    <li class="nav-item">
      <a href="performance.html" class="nav-link">Performance</a>
    </li>
    <li class="nav-item">
      <a href="salary.html" class="nav-link">Salary</a>
    </li>
    <li class="nav-item">
      <a href="reports.html" class="nav-link">Reports</a>
    </li>
  </ul>
</nav>

<div class="container">
  <header class="page-header">
    <h1>Employee Information Management</h1>
    <p>Manage detailed information about employees.</p>
  </header>

  <section class="employee-details">
    <h2>Existing Employees</h2>
    <!-- Placeholder for existing employee details -->
    <ul id="employeeList">
      <!-- Dynamically populate employee details here -->
    </ul>
  </section>

  <section class="employee-form">
    <h2>Add New Employee</h2>
    <form id="employeeForm">
      <div class="form-group">
        <label for="firstName">First Name:</label>
        <input type="text" id="firstName" name="firstName" required>
      </div>
      <div class="form-group">
        <label for="lastName">Last Name:</label>
        <input type="text" id="lastName" name="lastName" required>
      </div>
      <div class="form-group">
        <label for="email">Email:</label>
        <input type="email" id="email" name="email" required>
      </div>
      <div class="form-group">
        <label for="phone">Phone:</label>
        <input type="tel" id="phone" name="phone" required>
      </div>
      <!-- Add more fields for additional employee details -->
      <button type="button" id="addEmployeeBtn" class="btn-submit">Add Employee</button>
    </form>
  </section>
</div>

<div class="modal" id="editModal">
  <div class="modal-content">
    <span class="close">&times;</span>
    <!-- Form for editing employee details -->
  </div>
</div>

<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-database.js"></script>

<script>
  // Initialize Firebase
  const firebaseConfig = {
    apiKey: "AIzaSyD6A4gvA4xt2tfvK2S1UOsg25OYFsnoHBk",
    authDomain: "employee-management-111.firebaseapp.com",
    databaseURL: "https://employee-management-111-default-rtdb.firebaseio.com",
    projectId: "employee-management-111",
    storageBucket: "employee-management-111.appspot.com",
    messagingSenderId: "511443056601",
    appId: "1:511443056601:web:02ba1eafbdb2e5f3dc4bc8",
    measurementId: "G-PG3FT3F8WL"
  };
  firebase.initializeApp(firebaseConfig);

  const db = firebase.database();
  
  const employeeForm = document.getElementById('employeeForm');
  const employeeList = document.getElementById('employeeList');

  const addEmployeeBtn = document.getElementById('addEmployeeBtn');
  addEmployeeBtn.addEventListener('click', () => {
    const formData = new FormData(employeeForm);
    const employeeData = {
      firstName: formData.get('firstName'),
      lastName: formData.get('lastName'),
      email: formData.get('email'),
      phone: formData.get('phone'),
    };
    db.ref('employees').push(employeeData)
      .then(() => {
        location.reload(true); // Reload the page after successful submission
      })
      .catch(error => {
        console.error('Error adding employee:', error);
        // Handle error appropriately
      });
  });

  db.ref('employees').on('value', snapshot => {
    employeeList.innerHTML = '';
    snapshot.forEach(childSnapshot => {
      const employee = childSnapshot.val();
      const li = document.createElement('li');
      li.textContent = `${employee.firstName} ${employee.lastName}`;
      employeeList.appendChild(li);
    });
  });
</script>
</body>
</html>
